{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "ArcBehaviors",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "events-target-behavior.html",
        "start": {
          "line": 20,
          "column": 2
        },
        "end": {
          "line": 20,
          "column": 27
        }
      },
      "mixins": [
        {
          "description": "`ArcBehaviors.EventsTargetBehavior` is a behavior mixin that allows setting\nup event listeners on a default or set node.\n\nBy default the element listens on the `window` element for events. By setting\n`eventsTarget` property on this element it removes all previously set\nlisteners and adds the same listeners to the node.\nIt also restores default state when the `eventsTarget` is removed.\n\nImplementations should implement two abstract methods:\n`_attachListeners(node)` and `_detachListeners(node)`. Both of them will be\ncalled with event target argument when it's required to either set or remove\nlisteners.\n\n### Example (Polymer 2.x)\n\n```javascript\nclass EventableElement extends ArcBehaviors.EventsTargetBehavior(Polymer.Element) {\n static get is() {\n   return 'eventable-element';\n }\n  _attachListeners: function(node) {\n   mode.addEventListener('event', this._callback);\n }\n\n _detachListeners: function(node) {\n   mode.removeEventListener('event', this._callback);\n }\n}\n```\n\nThe mixin handles connectedCallback / disconnectedCallback and calls the\nfunctions with required parameters.",
          "summary": "",
          "path": "events-target-behavior.html",
          "properties": [
            {
              "name": "eventsTarget",
              "type": "Object",
              "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 73,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_eventsTargetChanged\""
                }
              }
            },
            {
              "name": "_oldEventsTarget",
              "type": "Object",
              "description": "An event target used to attach listeners.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 78,
                  "column": 8
                },
                "end": {
                  "line": 78,
                  "column": 32
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 81,
                  "column": 4
                },
                "end": {
                  "line": 84,
                  "column": 6
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 86,
                  "column": 5
                },
                "end": {
                  "line": 91,
                  "column": 6
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_eventsTargetChanged",
              "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 99,
                  "column": 4
                },
                "end": {
                  "line": 105,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "eventsTarget",
                  "type": "?Node",
                  "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
                }
              ]
            },
            {
              "name": "_attachListeners",
              "description": "To be implement by the element to set event listeners on the target",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 4
                },
                "end": {
                  "line": 109,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_detachListeners",
              "description": "To be implement by the element to remove event listeners from the target",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 111,
                  "column": 4
                },
                "end": {
                  "line": 113,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 0
            },
            "end": {
              "line": 116,
              "column": 2
            }
          },
          "privacy": "public",
          "name": "ArcBehaviors.EventsTargetBehavior",
          "attributes": [
            {
              "name": "events-target",
              "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
              "sourceRange": {
                "start": {
                  "line": 73,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Object"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  ]
}
